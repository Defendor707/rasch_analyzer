version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rasch_bot_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-rasch_bot}
      POSTGRES_USER: ${POSTGRES_USER:-rasch_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rasch_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rasch_bot_network

  # Telegram Bots Application
  telegram_bots:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rasch_telegram_bots
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      STUDENT_BOT_TOKEN: ${STUDENT_BOT_TOKEN}
      DATABASE_URL: postgresql://${POSTGRES_USER:-rasch_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-rasch_bot}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - rasch_bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  rasch_bot_network:
    driver: bridge
